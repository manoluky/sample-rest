package cl.tsoft.labs.ut.sample.rest.controller.dto;

import cl.tsoft.labs.ut.sample.rest.entitie.Person;
import cl.tsoft.labs.ut.sample.rest.entitie.type.Rut;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import java.time.LocalDate;

import static org.junit.jupiter.api.Assertions.*;

public class PersonMapperTest {


// Generated by CodiumAI


        // Mapping from Person to PersonDto
        @Test
        public void test_mapping_from_person_to_persondto() {
            // Arrange
            Person person = new Person();
            person.setId(1L);
            person.setRut(new Rut(12345678, 'K'));
            person.setName("John");
            person.setPaternalLastName("Doe");
            person.setMaternalLastName("Smith");
            person.setBirthDate(LocalDate.of(1990, 1, 1));
            person.setHomeAddress("123 Main St");
            person.setCellPhone("555-1234");
            person.setMail("john.doe@example.com");

            PersonMapperImpl mapper = new PersonMapperImpl();

            // Act
            PersonDto personDto = mapper.personToPersonDto(person);

            // Assert
            assertEquals(person.getId(), personDto.getId());
            assertEquals(person.getRut().toString(), personDto.getRut());
            assertEquals(person.getName() + " " + person.getPaternalLastName() + " " + person.getMaternalLastName(), personDto.getFullName());
            assertEquals(person.getHomeAddress(), personDto.getHomeAddress());
            assertEquals(person.getCellPhone(), personDto.getCellPhone());
            assertEquals(person.getMail(), personDto.getMail());
        }

        // Mapping a Person with an invalid Rut
        @Test
        public void test_mapping_person_with_invalid_rut() {
            // Arrange
            Person person = new Person();
            person.setId(1L);
            person.setRut(new Rut(123456789, 'K')); // Invalid Rut
            person.setName("John");
            person.setPaternalLastName("Doe");
            person.setMaternalLastName("Smith");
            person.setBirthDate(LocalDate.of(1990, 1, 1));
            person.setHomeAddress("123 Main St");
            person.setCellPhone("555-1234");
            person.setMail("john.doe@example.com");

            PersonMapperImpl mapper = new PersonMapperImpl();

            // Act
            PersonDto personDto = mapper.personToPersonDto(person);

            // Assert
            assertNull(personDto.getRut());
        }

    }